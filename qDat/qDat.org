#+begin_export latex
\section{Real Data}
Next we do some real genomics by detecting unique regions in real
data. Our example data set is the smallest human chromosome,
chromosome 21. We download the reference assembly of the human genome
and its annotations in ``dehydrated'' form.
#+end_export
#+begin_src sh <<qDat.sh>>=
  datasets download genome accession GCF_000001405.40 \
	   --include genome,gff3 \
	   --dehydrated
#+end_src
#+begin_export latex
We unzip the data set and rehydrate it. Since we are downloading
4.6\,GB of data, this can take a while, a bit over two minutes in our
case.
#+end_export
#+begin_src sh <<qDat.sh>>=
  unzip ncbi_dataset.zip
  datasets rehydrate --directory .
#+end_src
#+begin_export latex
We move the genome sequence and its annotation file to convenient
names.
#+end_export
#+begin_src sh <<qDat.sh>>=
  path="ncbi_dataset/data/GCF_000001405.40"
  path="$path/GCF_000001405.40_GRCh38.p14_genomic.fna"
  mv  $path hs.fna
  mv ncbi_dataset/data/GCF_000001405.40/genomic.gff hs.gff
#+end_src
#+begin_export latex
The accessions of reference assemblies have prefix \ty{NC}, so we list
them to find the accession of chromosome 21, \ty{NC\_000021.9}.
#+end_export
#+begin_src sh <<qDat.sh>>=
  grep '^>' hs.fna | grep NC
#+end_src
#+begin_export latex
We extract chromosome 21 using the program \ty{getSeq} (Biobox) and
save it to the file \ty{chr21.fna}.
#+end_export
#+begin_src sh <<qDat.sh>>=
  getSeq NC_000021.9 hs.fna > chr21.fna
#+end_src
#+begin_export latex
We count the 46.7\,Mb of chromosome 21 using the program \ty{cres}
(Biobox).
#+end_export
#+begin_src sh <<qDat.sh>>=
  cres chr21.fna
#+end_src
#+begin_export latex
\begin{verbatim}
Total: 46709983
Residue Count   Fraction
A       6975989 0.149
C       5249097 0.112
G       5245212 0.112
M       2       4.28e-08
N       6621361 0.142
R       1       2.14e-08
T       6989818 0.15
a       4844675 0.104
c       2936147 0.0629
g       2981169 0.0638
t       4866512 0.104
\end{verbatim}
The residues in lower case indicate repeats, while \ty{N} indicates an
unknown nucleotide. 14.2\% of chromosome 21 are still unknown.
#+end_export
#+begin_export latex
We calculate the \ty{genmap} index of chromosome 21. This takes 56\,s
and 1.4\,GB of RAM.
#+end_export
#+begin_src sh <<qDat.sh>>=
  genmap index -F chr21.fna -I chr21_gm.idx
#+end_src
#+begin_export latex
Then we calculate the mappability as before, which takes 20\,s and uses
0.3\,GB of RAM.
#+end_export
#+begin_src sh <<qDat.sh>>=
  genmap map -I chr21_gm.idx/ -K 15 -E 0 -O chr21_gm.out -t 
#+end_src
#+begin_export latex
We carry out the sliding window analysis of chromosome 21 with 10\,kb
windows, and save the values.
#+end_export
#+begin_src sh <<qDat.sh>>=
  tail -n +2 chr21_gm.out.txt |
      tr ' ' '\n' |
      sw -w 10000 > chr21.map
#+end_src
#+begin_export latex
To pick unique regions on chromosome 21, we calculate the mappability
threshold like we did for the simulated data. So we need to randomize
the sequence of chromosome 21. However, we saw that the sequence
contains many unknown nucleotides, \ty{N}s, so we remove these before
we randomize the sequence. Removing \ty{N}s creates empty lines, which
we remove and then re-wrap the sequence before we randomize the
resulting sequence and store it as \ty{chr21r.fna}.
#+end_export
#+begin_src sh <<qDat.sh>>=
  tr -d N < chr21.fna |
      grep -v '^$' |
      randomizeSeq |
      wrapSeq > chr21r.fna
#+end_src
#+begin_export latex
Then we index the randomized sequence and calculate its mappability.
#+end_export
#+begin_src sh <<qDat.sh>>=
  genmap index -F chr21r.fna -I chr21r_gm.idx
  genmap map -I chr21r_gm.idx/ -K 15 -E 0 -O chr21r_gm.out -t 
#+end_src
#+begin_export latex
We carry out the sliding window analysis of the mappability values and
pick their 5\,\% quantile. Given that there are 40,079 windows, 5\%
quantile is entry number
\[
40079/100\times 5\approx 2004.
\]
This turns out to be 0.9388.
#+end_export
#+begin_src sh <<qDat.sh>>=
  tail -n +2 chr21r_gm.out.txt |
      tr ' ' '\n' |
      sw -w 10000 |
      cut -f 3 |
      sort -n |
      head -n 2004 |
      tail -n 1
#+end_src
#+begin_export latex
However, if we look for unique regions with this threshold, we find
none.
#+end_export
#+begin_src sh <<qDat.sh>>=
  merwin -w 10000 -t 0.9388 < chr21.map
#+end_src
#+begin_export latex
Having calculated the mappability with \ty{genmap}, we next calculate
the match complexity with \ty{macle}. We begin by indexing the
sequence, which takes 18\,s and 3.1\,GB of RAM.
#+end_export
#+begin_src sh <<qDat.sh>>=
  macle -s chr21.fna > chr21_ma.idx
#+end_src
#+begin_export latex
From the \ty{macle} index we extract the match complexity values in 10
kb windows, which takes less than a second and 0.4\,GB RAM.
#+end_export
#+begin_src sh <<qDat.sh>>=
  macle -w 10000 chr21_ma.idx > chr21.cm
#+end_src
#+begin_export latex
To find unique regions in chromosome 21, we calculate the $\cm$
threshold. So we look up the length and the
GC content of chromosome 21 from the \ty{macle} index.
#+end_export
#+begin_src sh <<qDat.sh>>=
  macle -l chr21_ma.idx
#+end_src
#+begin_export latex
\begin{verbatim}
name:   chr21.fna
len:    46709983
gc:     0.4094
...
\end{verbatim}
We feed these values to \ty{mantile}, and find a threshold of 0.9951.
#+end_export
#+begin_src sh <<qDat.sh>>=
  mantile -l 46709983 -g 0.4094 -w 10000 -p 0.05
#+end_src
#+begin_export latex
With this threshold in hand, we extract the unique regions from
chromosome 21, sort them, and find that the longest consists of the 26
kb between 36,688,001 and 36,714,000.
#+end_export
#+begin_src sh <<qDat.sh>>=
  merwin -w 10000 -t 0.9951 chr21.cm |
      awk '{l=$3-$2+1;printf "%s\t%d\n", $0, l}' |
      sort -n -k 5 -r
#+end_src
#+begin_export latex
To annotate this unique region, we extract the genes that intersect it
from the annotation file.
#+end_export
#+begin_src sh <<qDat.sh>>=
  awk '$1=="NC_000021.9" && $3=="gene"' hs.gff |
      awk '$4<=36714000 && $5>=36688001'
#+end_src
#+begin_export latex
This gives two long non-coding RNAs at 36,632,681--36,698,991
(accession LOC105369308) and 36,700,516-36,709,131 (LOC107985492), and
the gene encoding the transcription factor SIM2 located on the forward
strand at 36,699,115--36,749,917. SIM2 is a master regulator of
neuronal development and is located in the chromosomal region on
chromosome 21 critical for the development of Down
syndrome~\cite{dah95:dow, but22:cha}.

So let's plot $\cm$ and the mappability in the 200\,kb surrounding our
unique region, 36,588,001--36,814,000. We first extract the $\cm$
values and label them ``c'', then the mappbability labeled ``m''.
#+end_export
#+begin_src sh <<qDat.sh>>=
  awk '$2>=36588001 && $2<=36814000 {print $2/1000000, $3, "c"}' \
      chr21.cm > chr21.dat
  awk '$2>=36588001 && $2<=36814000 {print $2/1000000, $3, "m"}' \
      chr21.map >> chr21.dat
#+end_src
#+begin_export latex
Now we annotate the graph by adding the $\cm$ threshold, ``t'', the
unique region, ``u'', and the coordinates of the SIM2 gene.
#+end_export
#+begin_src sh <<qDat.sh>>=
  echo "36.588001 0.9951 tc" >> chr21.dat
  echo "36.814000 0.9951 tc" >> chr21.dat
  echo "36.588001 0.9388 tm" >> chr21.dat
  echo "36.814000 0.9388 tm" >> chr21.dat
  echo "36.688001 0.2 u"  >> chr21.dat
  echo "36.714000 0.2 u"  >> chr21.dat
  echo "36.699115 0.1 s" >> chr21.dat
  echo "36.749917 0.1 s" >> chr21.dat
#+end_src
#+begin_export latex
Figure~\ref{fig:chr21} shows a slightly edited plot of our region. The mappability
and $\cm$ are closely correlated, though the $\cm$ has the advantage
that we can set a threshold that allows us to pick unique regions.

For \ty{genmap}, threshold computation evidently still needs to be
developed. If we lowered the mappability threshold from 0.9388 to
0.92, the longest interval we'd pick would be 16\,kb in the region
36,692,001--36,708,000, also intersecting the SIM gene (not shown).
\begin{figure}
  \begin{center}
    \includegraphics[width=0.8\textwidth]{../qDat/chr21}
  \end{center}
  \caption{Two measures of uniqueness along a portion of human
    chromosome 21, \emph{Complexity} ($\cm$) and the
    \emph{Mappability}; the dashed lines show the respective
    thresholds; the promoter and 5' region of the SIM2 \emph{Gene} is
    intersected by the \emph{Unique region}.}\label{fig:chr21}
\end{figure}
#+end_export
#+begin_src sh <<qDat.sh>>=
  plotLine -Y "0:1.1" -x "Position (Mb)" -y "Uniqueness" chr21.dat
#+end_src
